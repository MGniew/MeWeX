#include "BaseReport.h"

namespace machine_learning
{
	namespace heuristic_optimization
	{


BaseReport::BaseReport(void)
{
    this->mReport.open("report.txt", std::ios::binary);
    if(this->mReport.fail())
    {
        throw std::ios_base::failure("ERROR: Could not create file " + this->mFileName);
    }
    else
    {
        this->mReport<<"-------------------Steps-------------------";
        this->mReport<<std::endl;
    }
}

BaseReport::BaseReport(const std::string& rFileName, const std::string rTargetName)
{
    this->mFileName = rFileName;
    this->mReport.open(rFileName.c_str(), std::ios::binary);
    if(this->mReport.fail())
    {
        throw std::ios_base::failure("ERROR: Could not create file " + rFileName);
    }
    else
    {
        this->mReport<<"-------------------------------------------";
        this->mReport<<std::endl;
        this->mReport<<"The report generated by Optimizer"<<std::endl;
        this->mReport<<"Target name: "<<rTargetName<<std::endl;
        this->mReport<<"-------------------------------------------";
        this->mReport<<std::endl;
        this->mReport<<"-------------------Steps-------------------";
        this->mReport<<std::endl;
    }
}

BaseReport::~BaseReport(void) throw()
{
    this->mReport.close();
}


	}
}
