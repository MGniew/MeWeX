// Simple and general patterns that should be able to capture all two-word
// units from nkjp_WN2.xml (and hopefully later corrected versions).


// Pos2:{adj,ppas,pact} Pos1:{subst,ger,depr}
// OR Pos1:{subst,ger,depr NOT base=coś} Pos2:{adj,ppas,pact}
// with agreement on nmb,gnd,cas
//
// This pattern should cover the following classes
// (each given with one example unit):
// - SubstAdjPlFix służby specjalne
// - SubstAdjSgFlex zasiłek rodzinny
// - AdjSubstFix adaptacyjny układ
// - AdjSubstPlFlex kaczkowaty chód
// - SubstAdjFlex absolutyzm oświecony
// - AdjSubstSgFix babie lato
// - AdjSubstPlFix atrament sympatyczny
// - SubstAdjSgFix bielizna pościelowa
// - SubstAdjPlFlex angielska flegma
// - AdjSubstFlex alfabet grecki
// - AdjSubstSgFlex dobro własne
// - SubstAdjFix kredyt mieszkaniowy
// - PactSubstFix spadająca gwiazda
// - SubstPactFix łódź towarzysząca
@b:"1_AgrSubstAdj_2" (
	or(
		and(
			not(in(["coś"], base[0])),
			
			inter(class[1], {adj,ppas,pact}),
			inter(class[0], {subst,ger,depr}),
			
			agrpp(0,1, {nmb,gnd,cas}),
			
			setvar($Pos1, 0),
			setvar($Pos2, 1)   
		), //and
		and(
			inter(class[0], {adj,ppas,pact}),
			inter(class[1], {subst,ger,depr}),
			
			agrpp(0,1, {nmb,gnd,cas}),
			
			setvar($Pos1, 1),
			setvar($Pos2, 0)
		)
	) //or
)

// Pos2:{adj,ppas,pact}|[gnd=f] Pos1:{subst,ger,depr}|[gnd!=f]
// OR Pos1:{subst,ger,depr NOT base=coś}|[gnd!=f]} Pos2:{adj,ppas,pact}|[gnd=f]
// with agreement on nmb,cas but not on gender
//
// This pattern should cover the following classes
// (each given with one example unit):
// - AdjFSubstSgFix pierwsza sekretarz
// - SubstSgAdjFFix redaktor naczelna
@b:"1_GndSubstAdj_2" (
	or(
		and(
			not(in(["coś"], base[0])),
			
			inter(class[1], {adj,ppas,pact}),
			inter(class[0], {subst,ger,depr}),
			
			agrpp(0,1, {nmb,cas}),
			in({f}, gnd[1]),
			not(in({f}, gnd[0])),
			
			setvar($Pos1, 0),
			setvar($Pos2, 1)   
		), //and
		and(
			
			inter(class[0], {adj,ppas,pact}),
			inter(class[1], {subst,ger,depr}),
			
			agrpp(0,1, {nmb,cas}),
			in({f}, gnd[0]),
			not(in({f}, gnd[1])),
			
			setvar($Pos1, 1),
			setvar($Pos2, 0)
		)
	) //or
)

// Pos1:{base=coś} Pos2:{adj:gen}
// - SubstAdjGenFix coś mocniejszego
@b:"1_CosAdjGen_2" (
	and(
		in(["coś"], base[0]),
		inter(class[0], {subst,ger,depr}),
		inter(class[1], {adj,ppas,pact}),
		inter(cas[1], {gen}),
		
		setvar($Pos1, 0),
		setvar($Pos2, 1)
	) // and
)

// Pos1:{subst,ger,depr,ign} Pos2:{subst,ger,depr,ign}
//
// This pattern should cover the following classes
// (each given with one example unit):
// - SubstSubstSgFix kasza manna
// - SubstIgnFix język urdu
// - IgnSubstFix kick boxer
// - IgnIgnFix femme fatale
// - GerSubstGenSgFix NO-INSTANCES
// - GerSubstGenFix pranie mózgu
// - SubstSubstFix żuk gnojarz
// - SubstSubstGenFix adwokat diabła
// - SubstSubstGenSgFix apostolstwo świeckich
// - SubstGenSubstFix NO-VALID-INSTANCES
// - SubstGenPlSubstFix NO-VALID-INSTANCES
// - SubstGenSgSubstFix NO-VALID-INSTANCES
// - SubstSubstGen2PlFix gabinet luster
// - SubstPlSubstGenSgFix więzy krwi
// - NPOfTwoAgreedFix młoda gniewna*
// - IgnSubstGenFix dziesięcioro przykazań*
//
// *NPOfTwoAgreedFix will not cover "młoda gniewna"
// since it will most likely get tagged as adj adj.
// We don't want an explicit AdjAdj class
// since it's likely to massively generate instances
// of frequent adjective strings that in fact belong
// to bigger NPs.
// *IgnSubstGenFix dziesięcioro gets tagged as num
// so this example will in fact belong to another class
// but IgnSubstGenFix pattern itself belongs here.
@b:"1_AllSubstSubst_2" (
	and(
		inter(class[0], {subst,ger,depr,ign}),
		inter(class[1], {subst,ger,depr,ign}),
		setvar($Pos1, 0),
		setvar($Pos2, 1)
	) //and
)

// Pos1:{num} Pos2:{subst,ger,depr,ign}
// 
// This pattern should cover the following classes:
// - NumSubstGenFix dziesięć przykazań
@b:"1_AllNumSubst_2" (
	and(
		inter(class[0], {num}),
		inter(class[1], {subst,ger,depr,ign}),
		setvar($Pos1, 0),
		setvar($Pos2, 1)   
	) //and
)


// Pos1:{ppron3} Pos2:{subst,ger,depr,ign}
// - PPronSubstFix jego świątobliwość
@b:"1_Ppron3GenSubst_2" (
	and(
		inter(class[0], {ppron3}),
		inter(cas[0], {gen}),
		inter(class[1], {subst,ger,depr,ign}),
		setvar($Pos1, 0),
		setvar($Pos2, 1)
	)
)

// Pos1:{ger} Pos2:{qub}
// - GerSieFix kolegowanie się
@b:"1_AllGerQub_2" (
	and(
		inter(class[0], {ger}),
		inter(class[1], {qub}),  
		setvar($Pos1, 0),
		setvar($Pos2, 1)
	)
)

// Pos1:{pact,ppas} Pos2:{adv,qub}
// - PartAdvFix kochający inaczej
@b:"1_AllPartAdv_2" (
	and(
		inter(class[0], {pact,ppas}),
		inter(class[1], {adv,qub}),
		setvar($Pos1, 0),
		setvar($Pos2, 1)
	)
)

// Pos1:{adv,qub} Pos2:{pact,ppas}
// - AdvPactFix jaśnie oświecony
@b:"1_AllAdvPart_2" (
	and(
		 inter(class[0], {adv,qub}),
		 inter(class[1], {pact,ppas}),
		 setvar($Pos1, 0),
		 setvar($Pos2, 1)
	)
)

// Pos1:{subst,ger,depr,ign} Pos2:{burk}
// new pattern
// - AllSubstBurk elekcja viritim
@b:"1_AllSubstBurk_2" (
	and(
		inter(class[0], {subst,ger,depr,ign}),
		inter(class[1], {burk}),
		setvar($Pos1, 0),
		setvar($Pos2, 1)
	) //and
)

// Pos1:{subst,ger,depr,ign} Pos2:{siebie}
// - SubstSiebieFix pewność siebie
@b:"1_AllSubstSiebie_2" (
	and(
		inter(class[0], {subst,ger,depr,ign}),
		inter(class[1], {siebie}),
		setvar($Pos1, 0),
		setvar($Pos2, 1)
	)
)

////////////////////////////////////////////////// 3r //////////////////////////////////////////////////
//(np. skalarna wielkość fizyczna) 
@b:"1_AdjSubstAdj_3"(
	and(
		inter(class[0], {adj,pact,ppas}),
		inter(class[1], subst),
		inter(class[2], {adj,pact,ppas}),
		setvar($Pos1, 0),
		setvar($Pos2, 1),
		setvar($Pos3, 2)
	)
)

//(np. ruch jednostajny przyspieszony) 
@b:"1_SubstAdjAdj_3"(
	and(
		inter(class[0], subst),
		inter(class[1], {adj,pact,ppas}),
		inter(class[2], {adj,pact,ppas}),
		setvar($Pos1, 0),
		setvar($Pos2, 1),
		setvar($Pos3, 2)
	)
)

//(np. bezinteresowna polska zawiść) 
@b:"1_AdjAdjSubst_3"(
	and(
		inter(class[0], {adj,pact,ppas}),
		inter(class[1], {adj,pact,ppas}),
		inter(class[2], subst),
		setvar($Pos1, 0),
		setvar($Pos2, 1),
		setvar($Pos3, 2)
	)
)

//(np. gaz elektronowy Fermiego, człowiek starej daty) 
@b:"1_SubstAdjSubst_3"(
	and(
		inter(class[0], subst),
		inter(class[1], {adj,pact,ppas}),
		inter(class[2], subst),
		setvar($Pos1, 0),
		setvar($Pos2, 1),
		setvar($Pos3, 2)
	)
)

//(np. generator prądu elektrycznego, wino patykiem pisane) 
@b:"1_SubstSubstAdj_3"(
	and(
		inter(class[0], subst),
		inter(class[1], subst),
		inter(class[2], {adj,pact,ppas}),
		setvar($Pos1, 0),
		setvar($Pos2, 1),
		setvar($Pos3, 2)
	)
)

//(np. równikowy pas ciszy) 
@b:"1_AdjSubstSubst_3"(
	and(
		inter(class[0], {adj,pact,ppas}),
		inter(class[1], subst),
		inter(class[2], subst),
		setvar($Pos1, 0),
		setvar($Pos2, 1),
		setvar($Pos3, 2)
	)
)

//(np. wieża kontroli lotów) 
@b:"1_SubstSubstSubst_3"(
	and(
		inter(class[0], subst),
		inter(class[1], subst),
		inter(class[2], subst),
		setvar($Pos1, 0),
		setvar($Pos2, 1),
		setvar($Pos3, 2)
	)
)

//(np. ruch jednostajnie przyspieszony) 
@b:"1_SubstAdvAdj_3"(
	and(
		inter(class[0], subst),
		inter(class[1], adv),
		inter(class[2], {adj,pact,ppas}),
		setvar($Pos1, 0),
		setvar($Pos2, 1),
		setvar($Pos3, 2)
	)
)

//(np. bieg na przełaj) 
@b:"1_SubstPrepSubst_3"(
	and(
		inter(class[0], subst),
		inter(class[1], prep),
		inter(class[2], subst),
		setvar($Pos1, 0),
		setvar($Pos2, 1),
		setvar($Pos3, 2)
	)
)

//(np. brzydki jak noc) // to jest de facto jednostka przymiotnikowa 
@b:"1_AdjPrepSubst_3"(
	and(
		inter(class[0], {adj,pact,ppas}),
		inter(class[1], prep),
		inter(class[2], subst),
		setvar($Pos1, 0),
		setvar($Pos2, 1),
		setvar($Pos3, 2)
	)
)

//(np. dzień i noc ???) 
@b:"1_SubstConjSubst_3"(
	and(
		inter(class[0], subst),
		inter(class[1], conj),
		inter(class[2], subst),
		setvar($Pos1, 0),
		setvar($Pos2, 1),
		setvar($Pos3, 2)
	)
)
